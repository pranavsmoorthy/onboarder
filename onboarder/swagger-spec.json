{
    "openapi": "3.0.0",
    "info": {
        "title": "Onboarder API Specification",
        "version": "1.0.0",
        "description": "Onboarder Application API specification.",
        "contact": {
            "email": "pranavsmoorthy@gmail.com"
        }
    },
    "externalDocs": {
        "description": "swagger.json",
        "url": "/spec/swagger-spec.json"
    },
    "paths": {
        "/api/admin/courses": {
            "get": {
                "summary": "Get all courses",
                "description": "Get all courses",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "500": {
                        "description": "Unable to get list of all courses"
                    }
                }
            },
            "post": {
                "summary": "Create course",
                "description": "Create a new course",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "required": false
                                    },
                                    "completionDate": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response, new course created"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/admin/courses/{id}": {
            "get": {
                "summary": "Get course by ID",
                "description": "Get course by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of course to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Course with given ID could not be found"
                    },
                    "500": {
                        "description": "Unable to get list of all courses"
                    }
                }
            },
            "put": {
                "summary": "Update course by ID",
                "description": "Update course by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of course to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "required": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response, course updated"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete course by ID",
                "description": "Delete course by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of course to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Course with given ID could not be found"
                    },
                    "500": {
                        "description": "Unable to delete course"
                    }
                }
            }
        },
        "/api/admin/enroll": {
            "delete": {
                "summary": "Delete course enrollment for the user",
                "description": "Delete course enrollment for the user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "courseId": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Enrollment with given userId and courseId could not be found"
                    },
                    "500": {
                        "description": "Unable to unenroll"
                    }
                }
            },
            "post": {
                "summary": "Create course enrollment for the user",
                "description": "Create course enrollment for the user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "courseId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "completionDate": {
                                        "type": "string",
                                        "format": "date",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User or course with given userId and courseId could not be found"
                    },
                    "500": {
                        "description": "Unable to enroll"
                    }
                }
            }
        },
        "/api/admin/users": {
            "get": {
                "summary": "Get all users",
                "description": "Get all users",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "500": {
                        "description": "Unable to get list of all users"
                    }
                }
            }
        },
        "/api/admin/users/{id}": {
            "get": {
                "summary": "Get user by ID",
                "description": "Get user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of user to get"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User with given ID could not be found"
                    },
                    "500": {
                        "description": "Unable to get user with given ID"
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "description": "Delete user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of user to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User with given ID could not be found"
                    },
                    "500": {
                        "description": "Unable to delete user"
                    }
                }
            },
            "put": {
                "summary": "Update user by ID",
                "description": "Update user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "description": "ID of user to update"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "required": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "required": true
                                    },
                                    "role": {
                                        "type": "string",
                                        "required": true,
                                        "enum": [
                                            "User",
                                            "Admin"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User with given ID could not be found"
                    },
                    "500": {
                        "description": "Unable to update user"
                    }
                }
            }
        },
        "/api/protected/enroll": {
            "put": {
                "summary": "Update enrollment status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "courseId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "progress": {
                                        "type": "string",
                                        "required": true,
                                        "enum": [
                                            "In Progress",
                                            "Completed"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Enrollment not found for given user id and course id"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/protected/users": {
            "get": {
                "summary": "Get information of user currently signed in",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Could not find user with given ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "summary": "Update information of user currently signed in",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "required": true,
                                        "minLength": 8
                                    },
                                    "email": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Could not find user with given ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete user currently signed in",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Could not find user with given ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/public/auth": {
            "post": {
                "summary": "Login user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "get": {
                "summary": "Logout user",
                "description": "Logout user",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "500": {
                        "description": "Unable to logout"
                    }
                }
            }
        },
        "/api/public/users": {
            "post": {
                "summary": "Register user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "required": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response, new user created"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {},
    "tags": []
}